

Microchip MPLAB XC8 Assembler V2.10 build 88905656 
                                                                                               Thu Nov 14 16:11:16 2019

Microchip MPLAB XC8 C Compiler v2.10 (Free license) build 20190730164152 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	flic
     5                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     6                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     7                           	psect	text0,global,reloc=2,class=CODE,delta=1
     8                           	psect	text1,global,reloc=2,class=CODE,delta=1
     9                           	psect	text2,global,reloc=2,class=CODE,delta=1
    10                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    11                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    12  0000                     
    13                           ; Version 2.10
    14                           ; Generated 31/07/2019 GMT
    15                           ; 
    16                           ; Copyright Â© 2019, Microchip Technology Inc. and its subsidiaries ("Microchip")
    17                           ; All rights reserved.
    18                           ; 
    19                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    20                           ; 
    21                           ; Redistribution and use in source and binary forms, with or without modification, are
    22                           ; permitted provided that the following conditions are met:
    23                           ; 
    24                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    25                           ;        conditions and the following disclaimer.
    26                           ; 
    27                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    28                           ;        of conditions and the following disclaimer in the documentation and/or other
    29                           ;        materials provided with the distribution.
    30                           ; 
    31                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    32                           ;        software without specific prior written permission.
    33                           ; 
    34                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    35                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    36                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    37                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    38                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    39                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    40                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    41                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    42                           ; 
    43                           ; 
    44                           ; Code-generator required, PIC18F45K22 Definitions
    45                           ; 
    46                           ; SFR Addresses
    47  0000                     _ANSELA	set	3896
    48  0000                     _ANSELE	set	3900
    49  0000                     _ANSELB	set	3897
    50  0000                     _ANSELC	set	3898
    51  0000                     _ANSELD	set	3899
    52  0000                     _TXREG1	set	4013
    53  0000                     _SPBRG1	set	4015
    54  0000                     _TXSTA1bits	set	4012
    55  0000                     _BAUDCON1bits	set	4024
    56  0000                     _RCSTAbits	set	4011
    57  0000                     _TXSTAbits	set	4012
    58  0000                     _TRISCbits	set	3988
    59  0000                     _OSCTUNE	set	3995
    60  0000                     _OSCCON2	set	4050
    61  0000                     _OSCCON	set	4051
    62  0000                     _INTCON2bits	set	4081
    63  0000                     _WPUB	set	3937
    64  0000                     _TRISD	set	3989
    65  0000                     _TRISB	set	3987
    66  0000                     _TRISA	set	3986
    67  0000                     _TRISE	set	3990
    68  0000                     _LATC	set	3979
    69  0000                     _LATB	set	3978
    70  0000                     _LATA	set	3977
    71  0000                     _LATD	set	3980
    72  0000                     _LATE	set	3981
    73                           
    74                           ; #config settings
    75                           
    76                           	psect	cinit
    77  007F5E                     __pcinit:
    78                           	opt callstack 0
    79  007F5E                     start_initialization:
    80                           	opt callstack 0
    81  007F5E                     __initialization:
    82                           	opt callstack 0
    83  007F5E                     end_of_initialization:
    84                           	opt callstack 0
    85  007F5E                     __end_of__initialization:
    86                           	opt callstack 0
    87  007F5E  0100               	movlb	0
    88  007F60  EFBD  F03F         	goto	_main	;jump to C main() function
    89                           
    90                           	psect	cstackCOMRAM
    91  000001                     __pcstackCOMRAM:
    92                           	opt callstack 0
    93  000001                     send@x:
    94                           	opt callstack 0
    95                           
    96                           ; 1 bytes @ 0x0
    97  000001                     	ds	1
    98  000002                     main@c:
    99                           	opt callstack 0
   100                           
   101                           ; 1 bytes @ 0x1
   102  000002                     	ds	1
   103                           
   104 ;;
   105 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   106 ;;
   107 ;; *************** function _main *****************
   108 ;; Defined at:
   109 ;;		line 61 in file "newmain.c"
   110 ;; Parameters:    Size  Location     Type
   111 ;;		None
   112 ;; Auto vars:     Size  Location     Type
   113 ;;  c               1    1[COMRAM] unsigned char 
   114 ;; Return value:  Size  Location     Type
   115 ;;                  1    wreg      void 
   116 ;; Registers used:
   117 ;;		wreg, status,2, status,0, cstack
   118 ;; Tracked objects:
   119 ;;		On entry : 0/0
   120 ;;		On exit  : 0/0
   121 ;;		Unchanged: 0/0
   122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   123 ;;      Params:         0       0       0       0       0       0       0
   124 ;;      Locals:         1       0       0       0       0       0       0
   125 ;;      Temps:          0       0       0       0       0       0       0
   126 ;;      Totals:         1       0       0       0       0       0       0
   127 ;;Total ram usage:        1 bytes
   128 ;; Hardware stack levels required when called:    1
   129 ;; This function calls:
   130 ;;		_init_registers
   131 ;;		_send
   132 ;; This function is called by:
   133 ;;		Startup code after reset
   134 ;; This function uses a non-reentrant model
   135 ;;
   136                           
   137                           	psect	text0
   138  007F7A                     __ptext0:
   139                           	opt callstack 0
   140  007F7A                     _main:
   141                           	opt callstack 30
   142  007F7A                     
   143                           ;newmain.c: 62:     init_registers();
   144  007F7A  ECD4  F03F         	call	_init_registers	;wreg free
   145  007F7E                     
   146                           ;newmain.c: 63:     uint8_t c = 0;
   147  007F7E  0E00               	movlw	0
   148  007F80  6E02               	movwf	main@c^0,c
   149  007F82                     l782:
   150                           
   151                           ;newmain.c: 65:         send(c);
   152  007F82  5002               	movf	main@c^0,w,c
   153  007F84  ECB2  F03F         	call	_send
   154  007F88                     
   155                           ;newmain.c: 66:         c++;
   156  007F88  2A02               	incf	main@c^0,f,c
   157  007F8A                     
   158                           ;newmain.c: 67:         if(c==100)
   159  007F8A  0E64               	movlw	100
   160  007F8C  1802               	xorwf	main@c^0,w,c
   161  007F8E  A4D8               	btfss	status,2,c
   162  007F90  EFCC  F03F         	goto	u21
   163  007F94  EFCE  F03F         	goto	u20
   164  007F98                     u21:
   165  007F98  EFC1  F03F         	goto	l782
   166  007F9C                     u20:
   167  007F9C                     
   168                           ;newmain.c: 68:             c=1;}
   169  007F9C  0E01               	movlw	1
   170  007F9E  6E02               	movwf	main@c^0,c
   171  007FA0  EFC1  F03F         	goto	l782
   172  007FA4  EF00  F000         	goto	start
   173  007FA8                     __end_of_main:
   174                           	opt callstack 0
   175                           
   176 ;; *************** function _send *****************
   177 ;; Defined at:
   178 ;;		line 55 in file "newmain.c"
   179 ;; Parameters:    Size  Location     Type
   180 ;;  x               1    wreg     unsigned char 
   181 ;; Auto vars:     Size  Location     Type
   182 ;;  x               1    0[COMRAM] unsigned char 
   183 ;; Return value:  Size  Location     Type
   184 ;;                  1    wreg      void 
   185 ;; Registers used:
   186 ;;		wreg
   187 ;; Tracked objects:
   188 ;;		On entry : 0/0
   189 ;;		On exit  : 0/0
   190 ;;		Unchanged: 0/0
   191 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   192 ;;      Params:         0       0       0       0       0       0       0
   193 ;;      Locals:         1       0       0       0       0       0       0
   194 ;;      Temps:          0       0       0       0       0       0       0
   195 ;;      Totals:         1       0       0       0       0       0       0
   196 ;;Total ram usage:        1 bytes
   197 ;; Hardware stack levels used:    1
   198 ;; This function calls:
   199 ;;		Nothing
   200 ;; This function is called by:
   201 ;;		_main
   202 ;; This function uses a non-reentrant model
   203 ;;
   204                           
   205                           	psect	text1
   206  007F64                     __ptext1:
   207                           	opt callstack 0
   208  007F64                     _send:
   209                           	opt callstack 30
   210                           
   211                           ;incstack = 0
   212                           ;send@x stored from wreg
   213  007F64  6E01               	movwf	send@x^0,c
   214  007F66                     l58:
   215  007F66  A2AC               	btfss	172,1,c	;volatile
   216  007F68  EFB8  F03F         	goto	u11
   217  007F6C  EFBA  F03F         	goto	u10
   218  007F70                     u11:
   219  007F70  EFB3  F03F         	goto	l58
   220  007F74                     u10:
   221  007F74                     
   222                           ;newmain.c: 58:     TXREG1 = x;
   223  007F74  C001  FFAD         	movff	send@x,4013	;volatile
   224  007F78  0012               	return		;funcret
   225  007F7A                     __end_of_send:
   226                           	opt callstack 0
   227                           
   228 ;; *************** function _init_registers *****************
   229 ;; Defined at:
   230 ;;		line 15 in file "newmain.c"
   231 ;; Parameters:    Size  Location     Type
   232 ;;		None
   233 ;; Auto vars:     Size  Location     Type
   234 ;;		None
   235 ;; Return value:  Size  Location     Type
   236 ;;                  1    wreg      void 
   237 ;; Registers used:
   238 ;;		wreg, status,2
   239 ;; Tracked objects:
   240 ;;		On entry : 0/0
   241 ;;		On exit  : 0/0
   242 ;;		Unchanged: 0/0
   243 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
   244 ;;      Params:         0       0       0       0       0       0       0
   245 ;;      Locals:         0       0       0       0       0       0       0
   246 ;;      Temps:          0       0       0       0       0       0       0
   247 ;;      Totals:         0       0       0       0       0       0       0
   248 ;;Total ram usage:        0 bytes
   249 ;; Hardware stack levels used:    1
   250 ;; This function calls:
   251 ;;		Nothing
   252 ;; This function is called by:
   253 ;;		_main
   254 ;; This function uses a non-reentrant model
   255 ;;
   256                           
   257                           	psect	text2
   258  007FA8                     __ptext2:
   259                           	opt callstack 0
   260  007FA8                     _init_registers:
   261                           	opt callstack 30
   262  007FA8                     
   263                           ;newmain.c: 20:     LATE = 0x00;
   264  007FA8  0E00               	movlw	0
   265  007FAA  6E8D               	movwf	141,c	;volatile
   266                           
   267                           ;newmain.c: 21:     LATD = 0x00;
   268  007FAC  0E00               	movlw	0
   269  007FAE  6E8C               	movwf	140,c	;volatile
   270                           
   271                           ;newmain.c: 22:     LATA = 0x00;
   272  007FB0  0E00               	movlw	0
   273  007FB2  6E89               	movwf	137,c	;volatile
   274                           
   275                           ;newmain.c: 23:     LATB = 0x00;
   276  007FB4  0E00               	movlw	0
   277  007FB6  6E8A               	movwf	138,c	;volatile
   278                           
   279                           ;newmain.c: 24:     LATC = 0x00;
   280  007FB8  0E00               	movlw	0
   281  007FBA  6E8B               	movwf	139,c	;volatile
   282                           
   283                           ;newmain.c: 26:     TRISE = 0x07;
   284  007FBC  0E07               	movlw	7
   285  007FBE  6E96               	movwf	150,c	;volatile
   286  007FC0                     
   287                           ;newmain.c: 27:     TRISA = 0xFF;
   288  007FC0  6892               	setf	146,c	;volatile
   289  007FC2                     
   290                           ;newmain.c: 28:     TRISB = 0xFF;
   291  007FC2  6893               	setf	147,c	;volatile
   292  007FC4                     
   293                           ;newmain.c: 29:     TRISD = 0xFF;
   294  007FC4  6895               	setf	149,c	;volatile
   295  007FC6                     
   296                           ;newmain.c: 31:     ANSELD = 0xFF;
   297  007FC6  010F               	movlb	15	; () banked
   298  007FC8  693B               	setf	59,b	;volatile
   299                           
   300                           ;newmain.c: 32:     ANSELC = 0x3C;
   301  007FCA  0E3C               	movlw	60
   302  007FCC  6F3A               	movwf	58,b	;volatile
   303                           
   304                           ;newmain.c: 33:     ANSELB = 0x3F;
   305  007FCE  0E3F               	movlw	63
   306  007FD0  6F39               	movwf	57,b	;volatile
   307                           
   308                           ;newmain.c: 34:     ANSELE = 0x07;
   309  007FD2  0E07               	movlw	7
   310  007FD4  6F3C               	movwf	60,b	;volatile
   311                           
   312                           ;newmain.c: 35:     ANSELA = 0x2F;
   313  007FD6  0E2F               	movlw	47
   314  007FD8  6F38               	movwf	56,b	;volatile
   315                           
   316                           ;newmain.c: 37:     WPUB = 0x00;
   317  007FDA  0E00               	movlw	0
   318  007FDC  6E61               	movwf	97,c	;volatile
   319  007FDE                     
   320                           ; BSR set to: 15
   321                           ;newmain.c: 38:     INTCON2bits.nRBPU = 1;
   322  007FDE  8EF1               	bsf	241,7,c	;volatile
   323                           
   324                           ;newmain.c: 41:     OSCCON = 0x39;
   325  007FE0  0E39               	movlw	57
   326  007FE2  6ED3               	movwf	211,c	;volatile
   327                           
   328                           ;newmain.c: 42:     OSCCON2 = 0x00;
   329  007FE4  0E00               	movlw	0
   330  007FE6  6ED2               	movwf	210,c	;volatile
   331                           
   332                           ;newmain.c: 43:     OSCTUNE = 0x00;
   333  007FE8  0E00               	movlw	0
   334  007FEA  6E9B               	movwf	155,c	;volatile
   335  007FEC                     
   336                           ; BSR set to: 15
   337                           ;newmain.c: 45:     TRISCbits.TRISC6 = 0;
   338  007FEC  9C94               	bcf	148,6,c	;volatile
   339  007FEE                     
   340                           ; BSR set to: 15
   341                           ;newmain.c: 46:     TRISCbits.TRISC7 = 1;
   342  007FEE  8E94               	bsf	148,7,c	;volatile
   343  007FF0                     
   344                           ; BSR set to: 15
   345                           ;newmain.c: 47:     TXSTAbits.TXEN = 1;
   346  007FF0  8AAC               	bsf	172,5,c	;volatile
   347  007FF2                     
   348                           ; BSR set to: 15
   349                           ;newmain.c: 48:     TXSTAbits.SYNC = 0;
   350  007FF2  98AC               	bcf	172,4,c	;volatile
   351  007FF4                     
   352                           ; BSR set to: 15
   353                           ;newmain.c: 49:     RCSTAbits.SPEN = 1;
   354  007FF4  8EAB               	bsf	171,7,c	;volatile
   355  007FF6                     
   356                           ; BSR set to: 15
   357                           ;newmain.c: 50:     BAUDCON1bits.BRG16 = 0;
   358  007FF6  96B8               	bcf	184,3,c	;volatile
   359  007FF8                     
   360                           ; BSR set to: 15
   361                           ;newmain.c: 51:     TXSTA1bits.BRGH = 0;
   362  007FF8  94AC               	bcf	172,2,c	;volatile
   363                           
   364                           ;newmain.c: 52:     SPBRG1 = 103;
   365  007FFA  0E67               	movlw	103
   366  007FFC  6EAF               	movwf	175,c	;volatile
   367  007FFE                     
   368                           ; BSR set to: 15
   369  007FFE  0012               	return		;funcret
   370  008000                     __end_of_init_registers:
   371                           	opt callstack 0
   372  0000                     
   373                           	psect	rparam
   374  0000                     tosu	equ	0xFFF
   375                           tosh	equ	0xFFE
   376                           tosl	equ	0xFFD
   377                           stkptr	equ	0xFFC
   378                           pclatu	equ	0xFFB
   379                           pclath	equ	0xFFA
   380                           pcl	equ	0xFF9
   381                           tblptru	equ	0xFF8
   382                           tblptrh	equ	0xFF7
   383                           tblptrl	equ	0xFF6
   384                           tablat	equ	0xFF5
   385                           prodh	equ	0xFF4
   386                           prodl	equ	0xFF3
   387                           indf0	equ	0xFEF
   388                           postinc0	equ	0xFEE
   389                           postdec0	equ	0xFED
   390                           preinc0	equ	0xFEC
   391                           plusw0	equ	0xFEB
   392                           fsr0h	equ	0xFEA
   393                           fsr0l	equ	0xFE9
   394                           wreg	equ	0xFE8
   395                           indf1	equ	0xFE7
   396                           postinc1	equ	0xFE6
   397                           postdec1	equ	0xFE5
   398                           preinc1	equ	0xFE4
   399                           plusw1	equ	0xFE3
   400                           fsr1h	equ	0xFE2
   401                           fsr1l	equ	0xFE1
   402                           bsr	equ	0xFE0
   403                           indf2	equ	0xFDF
   404                           postinc2	equ	0xFDE
   405                           postdec2	equ	0xFDD
   406                           preinc2	equ	0xFDC
   407                           plusw2	equ	0xFDB
   408                           fsr2h	equ	0xFDA
   409                           fsr2l	equ	0xFD9
   410                           status	equ	0xFD8


Data Sizes:
    Strings     0
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95      2       2
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    None.

Critical Paths under _main in COMRAM

    _main->_send

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 1     1      0      45
                                              1 COMRAM     1     1      0
                     _init_registers
                               _send
 ---------------------------------------------------------------------------------
 (1) _send                                                 1     1      0      15
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _init_registers                                       0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 1
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _init_registers
   _send

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F      2       2       1        2.1%
STACK                0      0       0       2        0.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0      0       0       4        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0       0       6        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
ABS                  0      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BIGRAM             5FF      0       0      16        0.0%
DATA                 0      0       0      17        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V2.10 build 88905656 
Symbol Table                                                                                   Thu Nov 14 16:11:16 2019

                     l61 7F78                       l55 7FFE                       l58 7F66  
                     u10 7F74                       u11 7F70                       u20 7F9C  
                     u21 7F98         ??_init_registers 0001                      l750 7FC2  
                    l760 7FEE                      l752 7FC4                      l770 7FF8  
                    l762 7FF0                      l754 7FC6                      l746 7FA8  
                    l764 7FF2                      l756 7FDE                      l748 7FC0  
                    l780 7F7E                      l766 7FF4                      l758 7FEC  
                    l774 7F66                      l782 7F82                      l768 7FF6  
                    l776 7F74                      l784 7F88                      l786 7F8A  
                    l778 7F7A                      l788 7F9C               _TXSTA1bits 000FAC  
                   _LATA 000F89                     _LATB 000F8A                     _LATC 000F8B  
                   _LATD 000F8C                     _LATE 000F8D                     _WPUB 000F61  
                   _main 7F7A                     _send 7F64                     start 0000  
           ___param_bank 000000             _BAUDCON1bits 000FB8                    ?_main 0001  
                  ?_send 0001                    _TRISA 000F92                    _TRISB 000F93  
                  _TRISD 000F95                    _TRISE 000F96                    main@c 0002  
                  send@x 0001                    status 000FD8          __initialization 7F5E  
           __end_of_main 7FA8             __end_of_send 7F7A                   ??_main 0002  
                 ??_send 0001            __activetblptr 000000                   _ANSELA 000F38  
                 _ANSELB 000F39                   _ANSELC 000F3A                   _ANSELD 000F3B  
                 _ANSELE 000F3C                   _OSCCON 000FD3                   _SPBRG1 000FAF  
                 _TXREG1 000FAD               __accesstop 0060  __end_of__initialization 7F5E  
          ___rparam_used 000001           __pcstackCOMRAM 0001                  _OSCCON2 000FD2  
                _OSCTUNE 000F9B                  __Hparam 0000                  __Lparam 0000  
                __pcinit 7F5E                  __ramtop 0600                  __ptext0 7F7A  
                __ptext1 7F64                  __ptext2 7FA8  __size_of_init_registers 0058  
   end_of_initialization 7F5E                _RCSTAbits 000FAB                _TRISCbits 000F94  
              _TXSTAbits 000FAC      start_initialization 7F5E           _init_registers 7FA8  
 __end_of_init_registers 8000          ?_init_registers 0001              _INTCON2bits 000FF1  
               __Hrparam 0000                 __Lrparam 0000            __size_of_main 002E  
          __size_of_send 0016  
